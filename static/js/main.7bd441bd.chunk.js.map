{"version":3,"sources":["Components/contactForm/ContactForm.js","Components/contactList/contactListItem/ContactListItem.js","Components/contactList/ContactList.js","Components/filter/Filter.js","Components/App.js","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","state","onHandleChange","e","target","value","setState","handelSubmitForm","preventDefault","props","onAddNewContact","onSubmit","this","type","pattern","title","required","onChange","Component","ContactListItem","contact","removeContactById","onClick","id","ContactList","contacts","filterValue","newArr","filter","toLowerCase","includes","length","map","Filter","onFilterInput","App","JSON","parse","localStorage","getItem","prev","some","contactState","alert","uuidv4","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bd441bd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  onHandleChange = (e) => {\r\n    const { value, name } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handelSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddNewContact(this.state);\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handelSubmitForm}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nconst ContactListItem = ({ contact, removeContactById }) => {\r\n  const remove = () => {\r\n    removeContactById(contact.id);\r\n  };\r\n  return (\r\n    <li>\r\n      <p>\r\n        {contact.name}: {contact.number}\r\n      </p>\r\n      <button onClick={remove}>DELETE</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, filterValue, removeContactById }) => {\r\n  const newArr = [...contacts].filter((contact) =>\r\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {contacts.length !== 0 ? (\r\n        <>\r\n          {newArr.length !== 0 ? (\r\n            <ul>\r\n              {newArr.map((contact) => (\r\n                <ContactListItem\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  removeContactById={removeContactById}\r\n                />\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>There is no such contact ;(</p>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p>Please enter your first contact ;)</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ onFilterInput, filter }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name:\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={onFilterInput}\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: JSON.parse(localStorage.getItem(\"contacts\")) || [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n  }\r\n\r\n  removeContactById = (id) => {\r\n    this.setState((prev) => ({\r\n      contacts: [...prev.contacts.filter((contact) => contact.id !== id)],\r\n    }));\r\n  };\r\n\r\n  onFilterInput = (e) => {\r\n    const { value, name } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onAddNewContact = (contact) => {\r\n    if (\r\n      this.state.contacts.some((contactState) =>\r\n        contactState.name.toLowerCase().includes(contact.name.toLowerCase())\r\n      )\r\n    ) {\r\n      alert(`${contact.name} is already in contacts.`);\r\n      return;\r\n    }\r\n    this.setState((prev) => ({\r\n      contacts: [\r\n        ...prev.contacts,\r\n        { name: contact.name, number: contact.number, id: uuidv4() },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>Phonebook</h1>\r\n          <ContactForm onAddNewContact={this.onAddNewContact} />\r\n\r\n          <h2>Contacts</h2>\r\n          {this.state.contacts.length !== 0 && (\r\n            <Filter\r\n              onFilterInput={this.onFilterInput}\r\n              filter={this.state.filter}\r\n            />\r\n          )}\r\n\r\n          <ContactList\r\n            contacts={this.state.contacts}\r\n            filterValue={this.state.filter}\r\n            removeContactById={this.removeContactById}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}